//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public ProjectileThrowingDestination projectileThrowingDestination { get { return (ProjectileThrowingDestination)GetComponent(ComponentIds.ProjectileThrowingDestination); } }

        public bool hasProjectileThrowingDestination { get { return HasComponent(ComponentIds.ProjectileThrowingDestination); } }

        public Entity AddProjectileThrowingDestination(UnityEngine.Vector3 newStart, UnityEngine.Vector3 newDestination, float newInitAngle, float newInitHeight) {
            var component = CreateComponent<ProjectileThrowingDestination>(ComponentIds.ProjectileThrowingDestination);
            component.start = newStart;
            component.destination = newDestination;
            component.initAngle = newInitAngle;
            component.initHeight = newInitHeight;
            return AddComponent(ComponentIds.ProjectileThrowingDestination, component);
        }

        public Entity ReplaceProjectileThrowingDestination(UnityEngine.Vector3 newStart, UnityEngine.Vector3 newDestination, float newInitAngle, float newInitHeight) {
            var component = CreateComponent<ProjectileThrowingDestination>(ComponentIds.ProjectileThrowingDestination);
            component.start = newStart;
            component.destination = newDestination;
            component.initAngle = newInitAngle;
            component.initHeight = newInitHeight;
            ReplaceComponent(ComponentIds.ProjectileThrowingDestination, component);
            return this;
        }

        public Entity RemoveProjectileThrowingDestination() {
            return RemoveComponent(ComponentIds.ProjectileThrowingDestination);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherProjectileThrowingDestination;

        public static IMatcher ProjectileThrowingDestination {
            get {
                if (_matcherProjectileThrowingDestination == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.ProjectileThrowingDestination);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherProjectileThrowingDestination = matcher;
                }

                return _matcherProjectileThrowingDestination;
            }
        }
    }
}
