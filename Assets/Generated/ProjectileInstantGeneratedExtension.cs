//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public ProjectileInstant projectileInstant { get { return (ProjectileInstant)GetComponent(ComponentIds.ProjectileInstant); } }

        public bool hasProjectileInstant { get { return HasComponent(ComponentIds.ProjectileInstant); } }

        public Entity AddProjectileInstant(UnityEngine.Vector3 newStart, UnityEngine.Vector3 newEnd) {
            var component = CreateComponent<ProjectileInstant>(ComponentIds.ProjectileInstant);
            component.start = newStart;
            component.end = newEnd;
            return AddComponent(ComponentIds.ProjectileInstant, component);
        }

        public Entity ReplaceProjectileInstant(UnityEngine.Vector3 newStart, UnityEngine.Vector3 newEnd) {
            var component = CreateComponent<ProjectileInstant>(ComponentIds.ProjectileInstant);
            component.start = newStart;
            component.end = newEnd;
            ReplaceComponent(ComponentIds.ProjectileInstant, component);
            return this;
        }

        public Entity RemoveProjectileInstant() {
            return RemoveComponent(ComponentIds.ProjectileInstant);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherProjectileInstant;

        public static IMatcher ProjectileInstant {
            get {
                if (_matcherProjectileInstant == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.ProjectileInstant);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherProjectileInstant = matcher;
                }

                return _matcherProjectileInstant;
            }
        }
    }
}
