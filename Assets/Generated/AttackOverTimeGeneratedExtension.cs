//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public AttackOverTime attackOverTime { get { return (AttackOverTime)GetComponent(ComponentIds.AttackOverTime); } }

        public bool hasAttackOverTime { get { return HasComponent(ComponentIds.AttackOverTime); } }

        public Entity AddAttackOverTime(int newDamage, float newTickInterval) {
            var component = CreateComponent<AttackOverTime>(ComponentIds.AttackOverTime);
            component.damage = newDamage;
            component.tickInterval = newTickInterval;
            return AddComponent(ComponentIds.AttackOverTime, component);
        }

        public Entity ReplaceAttackOverTime(int newDamage, float newTickInterval) {
            var component = CreateComponent<AttackOverTime>(ComponentIds.AttackOverTime);
            component.damage = newDamage;
            component.tickInterval = newTickInterval;
            ReplaceComponent(ComponentIds.AttackOverTime, component);
            return this;
        }

        public Entity RemoveAttackOverTime() {
            return RemoveComponent(ComponentIds.AttackOverTime);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherAttackOverTime;

        public static IMatcher AttackOverTime {
            get {
                if (_matcherAttackOverTime == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.AttackOverTime);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherAttackOverTime = matcher;
                }

                return _matcherAttackOverTime;
            }
        }
    }
}
