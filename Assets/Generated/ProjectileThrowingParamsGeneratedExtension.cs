//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public ProjectileThrowingParams projectileThrowingParams { get { return (ProjectileThrowingParams)GetComponent(ComponentIds.ProjectileThrowingParams); } }

        public bool hasProjectileThrowingParams { get { return HasComponent(ComponentIds.ProjectileThrowingParams); } }

        public Entity AddProjectileThrowingParams(UnityEngine.Vector3 newStart, UnityEngine.Vector3 newEnd, float newGravity, float newAngle, float newHeight) {
            var component = CreateComponent<ProjectileThrowingParams>(ComponentIds.ProjectileThrowingParams);
            component.start = newStart;
            component.end = newEnd;
            component.gravity = newGravity;
            component.angle = newAngle;
            component.height = newHeight;
            return AddComponent(ComponentIds.ProjectileThrowingParams, component);
        }

        public Entity ReplaceProjectileThrowingParams(UnityEngine.Vector3 newStart, UnityEngine.Vector3 newEnd, float newGravity, float newAngle, float newHeight) {
            var component = CreateComponent<ProjectileThrowingParams>(ComponentIds.ProjectileThrowingParams);
            component.start = newStart;
            component.end = newEnd;
            component.gravity = newGravity;
            component.angle = newAngle;
            component.height = newHeight;
            ReplaceComponent(ComponentIds.ProjectileThrowingParams, component);
            return this;
        }

        public Entity RemoveProjectileThrowingParams() {
            return RemoveComponent(ComponentIds.ProjectileThrowingParams);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherProjectileThrowingParams;

        public static IMatcher ProjectileThrowingParams {
            get {
                if (_matcherProjectileThrowingParams == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.ProjectileThrowingParams);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherProjectileThrowingParams = matcher;
                }

                return _matcherProjectileThrowingParams;
            }
        }
    }
}
