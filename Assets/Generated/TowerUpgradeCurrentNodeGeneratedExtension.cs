//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public TowerUpgradeCurrentNode towerUpgradeCurrentNode { get { return (TowerUpgradeCurrentNode)GetComponent(ComponentIds.TowerUpgradeCurrentNode); } }

        public bool hasTowerUpgradeCurrentNode { get { return HasComponent(ComponentIds.TowerUpgradeCurrentNode); } }

        public Entity AddTowerUpgradeCurrentNode(Node<string> newNode) {
            var component = CreateComponent<TowerUpgradeCurrentNode>(ComponentIds.TowerUpgradeCurrentNode);
            component.node = newNode;
            return AddComponent(ComponentIds.TowerUpgradeCurrentNode, component);
        }

        public Entity ReplaceTowerUpgradeCurrentNode(Node<string> newNode) {
            var component = CreateComponent<TowerUpgradeCurrentNode>(ComponentIds.TowerUpgradeCurrentNode);
            component.node = newNode;
            ReplaceComponent(ComponentIds.TowerUpgradeCurrentNode, component);
            return this;
        }

        public Entity RemoveTowerUpgradeCurrentNode() {
            return RemoveComponent(ComponentIds.TowerUpgradeCurrentNode);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherTowerUpgradeCurrentNode;

        public static IMatcher TowerUpgradeCurrentNode {
            get {
                if (_matcherTowerUpgradeCurrentNode == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.TowerUpgradeCurrentNode);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherTowerUpgradeCurrentNode = matcher;
                }

                return _matcherTowerUpgradeCurrentNode;
            }
        }
    }
}
