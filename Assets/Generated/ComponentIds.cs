//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentIndicesGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class ComponentIds {

    public const int Active = 0;
    public const int Ally = 1;
    public const int Aoe = 2;
    public const int Armor = 3;
    public const int Attack = 4;
    public const int Attackable = 5;
    public const int AttackCooldown = 6;
    public const int AttackDamage = 7;
    public const int AttackDamageRange = 8;
    public const int Attacking = 9;
    public const int AttackingParams = 10;
    public const int AttackOverTime = 11;
    public const int AttackRange = 12;
    public const int AttackSpeed = 13;
    public const int AttackTime = 14;
    public const int Channeling = 15;
    public const int Coroutine = 16;
    public const int CoroutineQueue = 17;
    public const int CurrentSelected = 18;
    public const int Description = 19;
    public const int Destination = 20;
    public const int Duration = 21;
    public const int Dying = 22;
    public const int DyingTime = 23;
    public const int EffectMovement = 24;
    public const int EffectMovementList = 25;
    public const int Enemy = 26;
    public const int Engaged = 27;
    public const int Gold = 28;
    public const int GoldPlayer = 29;
    public const int Hp = 30;
    public const int HpRegen = 31;
    public const int HpTotal = 32;
    public const int Icon = 33;
    public const int Id = 34;
    public const int Interactable = 35;
    public const int Interval = 36;
    public const int LifeCount = 37;
    public const int LifePlayer = 38;
    public const int Map = 39;
    public const int MarkedForActive = 40;
    public const int MarkedForDestroy = 41;
    public const int MarkedForSell = 42;
    public const int Movable = 43;
    public const int MoveSpeed = 44;
    public const int MoveSpeedBase = 45;
    public const int Name = 46;
    public const int NextWave = 47;
    public const int Origin = 48;
    public const int Path = 49;
    public const int PathLength = 50;
    public const int PathReference = 51;
    public const int PointAttack = 52;
    public const int PointTarget = 53;
    public const int Position = 54;
    public const int Projectile = 55;
    public const int ProjectileHoming = 56;
    public const int ProjectileInstant = 57;
    public const int ProjectileLaser = 58;
    public const int ProjectileMark = 59;
    public const int ProjectileThrowing = 60;
    public const int ProjectileThrowingParams = 61;
    public const int ReachedEnd = 62;
    public const int Rooted = 63;
    public const int Selected = 64;
    public const int SkillCombat = 65;
    public const int Skill = 66;
    public const int SkillEntityRefs = 67;
    public const int SkillList = 68;
    public const int SkillSummon = 69;
    public const int SkillUpgrade = 70;
    public const int Stunned = 71;
    public const int Target = 72;
    public const int Targetable = 73;
    public const int TargetRange = 74;
    public const int Tick = 75;
    public const int TimeSpeed = 76;
    public const int TimeTotal = 77;
    public const int Tower = 78;
    public const int TowerBase = 79;
    public const int TowerReset = 80;
    public const int TowerUpgrade = 81;
    public const int TowerUpgrading = 82;
    public const int TurnSpeed = 83;
    public const int View = 84;
    public const int ViewAnims = 85;
    public const int ViewCollider = 86;
    public const int ViewLookAt = 87;
    public const int ViewSelected = 88;
    public const int ViewSlider = 89;
    public const int Wave = 90;
    public const int Wound = 91;

    public const int TotalComponents = 92;

    public static readonly string[] componentNames = {
        "Active",
        "Ally",
        "Aoe",
        "Armor",
        "Attack",
        "Attackable",
        "AttackCooldown",
        "AttackDamage",
        "AttackDamageRange",
        "Attacking",
        "AttackingParams",
        "AttackOverTime",
        "AttackRange",
        "AttackSpeed",
        "AttackTime",
        "Channeling",
        "Coroutine",
        "CoroutineQueue",
        "CurrentSelected",
        "Description",
        "Destination",
        "Duration",
        "Dying",
        "DyingTime",
        "EffectMovement",
        "EffectMovementList",
        "Enemy",
        "Engaged",
        "Gold",
        "GoldPlayer",
        "Hp",
        "HpRegen",
        "HpTotal",
        "Icon",
        "Id",
        "Interactable",
        "Interval",
        "LifeCount",
        "LifePlayer",
        "Map",
        "MarkedForActive",
        "MarkedForDestroy",
        "MarkedForSell",
        "Movable",
        "MoveSpeed",
        "MoveSpeedBase",
        "Name",
        "NextWave",
        "Origin",
        "Path",
        "PathLength",
        "PathReference",
        "PointAttack",
        "PointTarget",
        "Position",
        "Projectile",
        "ProjectileHoming",
        "ProjectileInstant",
        "ProjectileLaser",
        "ProjectileMark",
        "ProjectileThrowing",
        "ProjectileThrowingParams",
        "ReachedEnd",
        "Rooted",
        "Selected",
        "SkillCombat",
        "Skill",
        "SkillEntityRefs",
        "SkillList",
        "SkillSummon",
        "SkillUpgrade",
        "Stunned",
        "Target",
        "Targetable",
        "TargetRange",
        "Tick",
        "TimeSpeed",
        "TimeTotal",
        "Tower",
        "TowerBase",
        "TowerReset",
        "TowerUpgrade",
        "TowerUpgrading",
        "TurnSpeed",
        "View",
        "ViewAnims",
        "ViewCollider",
        "ViewLookAt",
        "ViewSelected",
        "ViewSlider",
        "Wave",
        "Wound"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Active),
        typeof(Ally),
        typeof(Aoe),
        typeof(Armor),
        typeof(Attack),
        typeof(Attackable),
        typeof(AttackCooldown),
        typeof(AttackDamage),
        typeof(AttackDamageRange),
        typeof(Attacking),
        typeof(AttackingParams),
        typeof(AttackOverTime),
        typeof(AttackRange),
        typeof(AttackSpeed),
        typeof(AttackTime),
        typeof(Channeling),
        typeof(Coroutine),
        typeof(CoroutineQueue),
        typeof(CurrentSelected),
        typeof(Description),
        typeof(Destination),
        typeof(Duration),
        typeof(Dying),
        typeof(DyingTime),
        typeof(EffectMovement),
        typeof(EffectMovementList),
        typeof(Enemy),
        typeof(Engaged),
        typeof(Gold),
        typeof(GoldPlayer),
        typeof(Hp),
        typeof(HpRegen),
        typeof(HpTotal),
        typeof(Icon),
        typeof(Id),
        typeof(Interactable),
        typeof(Interval),
        typeof(LifeCount),
        typeof(LifePlayer),
        typeof(Map),
        typeof(MarkedForActive),
        typeof(MarkedForDestroy),
        typeof(MarkedForSell),
        typeof(Movable),
        typeof(MoveSpeed),
        typeof(MoveSpeedBase),
        typeof(Name),
        typeof(NextWave),
        typeof(Origin),
        typeof(Path),
        typeof(PathLength),
        typeof(PathReference),
        typeof(PointAttack),
        typeof(PointTarget),
        typeof(Position),
        typeof(Projectile),
        typeof(ProjectileHoming),
        typeof(ProjectileInstant),
        typeof(ProjectileLaser),
        typeof(ProjectileMark),
        typeof(ProjectileThrowing),
        typeof(ProjectileThrowingParams),
        typeof(ReachedEnd),
        typeof(Rooted),
        typeof(Selected),
        typeof(SkillCombat),
        typeof(SkillComponent),
        typeof(SkillEntityRefs),
        typeof(SkillList),
        typeof(SkillSummon),
        typeof(SkillUpgrade),
        typeof(Stunned),
        typeof(Target),
        typeof(Targetable),
        typeof(TargetRange),
        typeof(Tick),
        typeof(TimeSpeed),
        typeof(TimeTotal),
        typeof(Tower),
        typeof(TowerBase),
        typeof(TowerReset),
        typeof(TowerUpgrade),
        typeof(TowerUpgrading),
        typeof(TurnSpeed),
        typeof(View),
        typeof(ViewAnims),
        typeof(ViewCollider),
        typeof(ViewLookAt),
        typeof(ViewSelected),
        typeof(ViewSlider),
        typeof(Wave),
        typeof(Wound)
    };
}
