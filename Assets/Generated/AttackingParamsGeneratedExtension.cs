//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public AttackingParams attackingParams { get { return (AttackingParams)GetComponent(ComponentIds.AttackingParams); } }

        public bool hasAttackingParams { get { return HasComponent(ComponentIds.AttackingParams); } }

        public Entity AddAttackingParams(string newState, float newDuration) {
            var component = CreateComponent<AttackingParams>(ComponentIds.AttackingParams);
            component.state = newState;
            component.duration = newDuration;
            return AddComponent(ComponentIds.AttackingParams, component);
        }

        public Entity ReplaceAttackingParams(string newState, float newDuration) {
            var component = CreateComponent<AttackingParams>(ComponentIds.AttackingParams);
            component.state = newState;
            component.duration = newDuration;
            ReplaceComponent(ComponentIds.AttackingParams, component);
            return this;
        }

        public Entity RemoveAttackingParams() {
            return RemoveComponent(ComponentIds.AttackingParams);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherAttackingParams;

        public static IMatcher AttackingParams {
            get {
                if (_matcherAttackingParams == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.AttackingParams);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherAttackingParams = matcher;
                }

                return _matcherAttackingParams;
            }
        }
    }
}
