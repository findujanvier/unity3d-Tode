//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public ProjectileThrowing projectileThrowing { get { return (ProjectileThrowing)GetComponent(ComponentIds.ProjectileThrowing); } }

        public bool hasProjectileThrowing { get { return HasComponent(ComponentIds.ProjectileThrowing); } }

        public Entity AddProjectileThrowing(float newTravelTime, float newInitSpeed) {
            var component = CreateComponent<ProjectileThrowing>(ComponentIds.ProjectileThrowing);
            component.travelTime = newTravelTime;
            component.initSpeed = newInitSpeed;
            return AddComponent(ComponentIds.ProjectileThrowing, component);
        }

        public Entity ReplaceProjectileThrowing(float newTravelTime, float newInitSpeed) {
            var component = CreateComponent<ProjectileThrowing>(ComponentIds.ProjectileThrowing);
            component.travelTime = newTravelTime;
            component.initSpeed = newInitSpeed;
            ReplaceComponent(ComponentIds.ProjectileThrowing, component);
            return this;
        }

        public Entity RemoveProjectileThrowing() {
            return RemoveComponent(ComponentIds.ProjectileThrowing);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherProjectileThrowing;

        public static IMatcher ProjectileThrowing {
            get {
                if (_matcherProjectileThrowing == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.ProjectileThrowing);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherProjectileThrowing = matcher;
                }

                return _matcherProjectileThrowing;
            }
        }
    }
}
